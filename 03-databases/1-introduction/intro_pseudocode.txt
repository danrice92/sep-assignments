Review the Codecademy Learn SQL course which you completed as pre-work.

For each of these skills, write pseudo-code (like the post = Post.all.first example above) to demonstrate how your application might perform these tasks through an ORM. For each code sample, also write a corresponding SQL statement. Send the code samples and SQL statements to your mentor.

1. Remove duplicates in a query response
Pseudo code:
User.all.unique?

SQL statement:
SELECT DISTINCT name FROM user;

2. Filter records using inequalities, pattern matching, ranges, and boolean logic
Pseudo code:
Comment.all.starts_with('a')

SQL statement:
SELECT * FROM comment WHERE body LIKE 'a%';

3. Sort records in a particular order
Pseudo code:
Comment.all.sort(id, asc)

SQL statement:
SELECT * FROM comment ORDER BY id ASC;

4. Limit the number of records returned
Pseudo code:
User.all.sort(id, asc, 2)

SQL statement:
SELECT * FROM user ORDER BY id ASC LIMIT 2;

5. Group records into sections
Pseudo code:
Comment.all.group(user_id)

SQL statement:
SELECT user_id, COUNT(*) FROM comment
GROUP BY user_id;

6. Perform calculations using aggregate function
Pseudo code:
Comment.all.add_up(id)

SQL statement:
SELECT SUM(id) FROM comment;

7. Join tables using cross join, inner join, and outer join
Pseudo code, cross join:
User.all.name
Post.all.body
Comment.all.body

SQL statement, cross join:
SELECT user.name, post.body, comment.body FROM user, post, comment;

Pseudo code, inner join:
User.all.id.join_on(Comment.all.user_id)

SQL statement, inner join:
SELECT
  *
FROM
  user
JOIN comment ON
  comment.user_id = user.id;

Pseudo code, outer join:
User.all.id.join_on(Comment.all.user_id)

SQL statement, outer join:
SELECT
  *
FROM
  user
LEFT JOIN comment ON
  comment.user_id = user.id;
